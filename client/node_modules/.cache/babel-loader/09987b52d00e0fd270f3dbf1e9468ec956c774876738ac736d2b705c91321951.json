{"ast":null,"code":"\"use strict\";\n\nexports.MinuteParser = void 0;\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\nclass MinuteParser extends _Parser.Parser {\n  priority = 60;\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return (0, _utils.parseNumericPattern)(_constants.numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, {\n          unit: \"minute\"\n        });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n  incompatibleTokens = [\"t\", \"T\"];\n}\nexports.MinuteParser = MinuteParser;","map":{"version":3,"names":["exports","MinuteParser","_constants","require","_Parser","_utils","Parser","priority","parse","dateString","token","match","parseNumericPattern","numericPatterns","minute","ordinalNumber","unit","parseNDigits","length","validate","_date","value","set","date","_flags","setMinutes","incompatibleTokens"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/parse/_lib/parsers/MinuteParser.js"],"sourcesContent":["\"use strict\";\nexports.MinuteParser = void 0;\nvar _constants = require(\"../constants.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass MinuteParser extends _Parser.Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return (0, _utils.parseNumericPattern)(\n          _constants.numericPatterns.minute,\n          dateString,\n        );\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return (0, _utils.parseNDigits)(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\nexports.MinuteParser = MinuteParser;\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,YAAY,GAAG,KAAK,CAAC;AAC7B,IAAIC,UAAU,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC3C,IAAIC,OAAO,GAAGD,OAAO,CAAC,cAAc,CAAC;AAErC,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEnC,MAAMF,YAAY,SAASG,OAAO,CAACE,MAAM,CAAC;EACxCC,QAAQ,GAAG,EAAE;EAEbC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;QACN,OAAO,CAAC,CAAC,EAAEL,MAAM,CAACO,mBAAmB,EACnCV,UAAU,CAACW,eAAe,CAACC,MAAM,EACjCL,UACF,CAAC;MACH,KAAK,IAAI;QACP,OAAOE,KAAK,CAACI,aAAa,CAACN,UAAU,EAAE;UAAEO,IAAI,EAAE;QAAS,CAAC,CAAC;MAC5D;QACE,OAAO,CAAC,CAAC,EAAEX,MAAM,CAACY,YAAY,EAAEP,KAAK,CAACQ,MAAM,EAAET,UAAU,CAAC;IAC7D;EACF;EAEAU,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACrB,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,EAAE;EAClC;EAEAC,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEH,KAAK,EAAE;IACvBE,IAAI,CAACE,UAAU,CAACJ,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5B,OAAOE,IAAI;EACb;EAEAG,kBAAkB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AACjC;AACA1B,OAAO,CAACC,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
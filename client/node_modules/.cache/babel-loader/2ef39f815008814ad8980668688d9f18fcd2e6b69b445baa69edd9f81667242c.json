{"ast":null,"code":"\"use strict\";\n\nexports.endOfYesterday = endOfYesterday; /**\n                                         * @name endOfYesterday\n                                         * @category Day Helpers\n                                         * @summary Return the end of yesterday.\n                                         * @pure false\n                                         *\n                                         * @description\n                                         * Return the end of yesterday.\n                                         *\n                                         * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n                                         *\n                                         * @returns The end of yesterday\n                                         *\n                                         * @example\n                                         * // If today is 6 October 2014:\n                                         * const result = endOfYesterday()\n                                         * //=> Sun Oct 5 2014 23:59:59.999\n                                         */\nfunction endOfYesterday() {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  const day = now.getDate();\n  const date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","map":{"version":3,"names":["exports","endOfYesterday","now","Date","year","getFullYear","month","getMonth","day","getDate","date","setFullYear","setHours"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/endOfYesterday.js"],"sourcesContent":["\"use strict\";\nexports.endOfYesterday = endOfYesterday; /**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @returns The end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nfunction endOfYesterday() {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  const day = now.getDate();\n\n  const date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,cAAc,GAAGA,cAAc,CAAC,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAcA,CAAA,EAAG;EACxB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,IAAI,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC;EAC9B,MAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAQ,CAAC,CAAC;EAC5B,MAAMC,GAAG,GAAGN,GAAG,CAACO,OAAO,CAAC,CAAC;EAEzB,MAAMC,IAAI,GAAG,IAAIP,IAAI,CAAC,CAAC,CAAC;EACxBO,IAAI,CAACC,WAAW,CAACP,IAAI,EAAEE,KAAK,EAAEE,GAAG,GAAG,CAAC,CAAC;EACtCE,IAAI,CAACE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EAC9B,OAAOF,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nexports.dayPeriodEnumToHours = dayPeriodEnumToHours;\nexports.isLeapYearIndex = isLeapYearIndex;\nexports.mapValue = mapValue;\nexports.normalizeTwoDigitYear = normalizeTwoDigitYear;\nexports.parseAnyDigitsSigned = parseAnyDigitsSigned;\nexports.parseNDigits = parseNDigits;\nexports.parseNDigitsSigned = parseNDigitsSigned;\nexports.parseNumericPattern = parseNumericPattern;\nexports.parseTimezonePattern = parseTimezonePattern;\nvar _index = require(\"../../constants.js\");\nvar _constants = require(\"./constants.js\");\nfunction mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest\n  };\n}\nfunction parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nfunction parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1)\n    };\n  }\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * _index.millisecondsInHour + minutes * _index.millisecondsInMinute + seconds * _index.millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nfunction parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(_constants.numericPatterns.anyDigitsSigned, dateString);\n}\nfunction parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(_constants.numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(_constants.numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(_constants.numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(_constants.numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\nfunction parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(_constants.numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(_constants.numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(_constants.numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(_constants.numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\nfunction dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n  return isCommonEra ? result : 1 - result;\n}\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","map":{"version":3,"names":["exports","dayPeriodEnumToHours","isLeapYearIndex","mapValue","normalizeTwoDigitYear","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","parseNumericPattern","parseTimezonePattern","_index","require","_constants","parseFnResult","mapFn","value","rest","pattern","dateString","matchResult","match","parseInt","slice","length","sign","hours","minutes","seconds","millisecondsInHour","millisecondsInMinute","millisecondsInSecond","numericPatterns","anyDigitsSigned","n","singleDigit","twoDigits","threeDigits","fourDigits","RegExp","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","dayPeriod","twoDigitYear","currentYear","isCommonEra","absCurrentYear","result","rangeEnd","rangeEndCentury","Math","trunc","isPreviousCentury","year"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/parse/_lib/utils.js"],"sourcesContent":["\"use strict\";\nexports.dayPeriodEnumToHours = dayPeriodEnumToHours;\nexports.isLeapYearIndex = isLeapYearIndex;\nexports.mapValue = mapValue;\nexports.normalizeTwoDigitYear = normalizeTwoDigitYear;\nexports.parseAnyDigitsSigned = parseAnyDigitsSigned;\nexports.parseNDigits = parseNDigits;\nexports.parseNDigitsSigned = parseNDigitsSigned;\nexports.parseNumericPattern = parseNumericPattern;\nexports.parseTimezonePattern = parseTimezonePattern;\nvar _index = require(\"../../constants.js\");\n\nvar _constants = require(\"./constants.js\");\n\nfunction mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nfunction parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nfunction parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * _index.millisecondsInHour +\n        minutes * _index.millisecondsInMinute +\n        seconds * _index.millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nfunction parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(\n    _constants.numericPatterns.anyDigitsSigned,\n    dateString,\n  );\n}\n\nfunction parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(\n        _constants.numericPatterns.singleDigit,\n        dateString,\n      );\n    case 2:\n      return parseNumericPattern(\n        _constants.numericPatterns.twoDigits,\n        dateString,\n      );\n    case 3:\n      return parseNumericPattern(\n        _constants.numericPatterns.threeDigits,\n        dateString,\n      );\n    case 4:\n      return parseNumericPattern(\n        _constants.numericPatterns.fourDigits,\n        dateString,\n      );\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nfunction parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(\n        _constants.numericPatterns.singleDigitSigned,\n        dateString,\n      );\n    case 2:\n      return parseNumericPattern(\n        _constants.numericPatterns.twoDigitsSigned,\n        dateString,\n      );\n    case 3:\n      return parseNumericPattern(\n        _constants.numericPatterns.threeDigitsSigned,\n        dateString,\n      );\n    case 4:\n      return parseNumericPattern(\n        _constants.numericPatterns.fourDigitsSigned,\n        dateString,\n      );\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nfunction dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
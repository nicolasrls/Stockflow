{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\sotckflow 2\\\\Stockflow\\\\client\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [twoFactorToken, setTwoFactorToken] = useState('');\n  const [showTwoFactor, setShowTwoFactor] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (email && senha) {\n      // Aqui, não estamos validando nada, apenas mostrando o campo 2FA\n      setShowTwoFactor(true); // Torna o campo 2FA visível\n    } else {\n      setErrorMessage('Por favor, preencha todos os campos.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), !showTwoFactor && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Senha\",\n            value: senha,\n            onChange: e => setSenha(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), showTwoFactor && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qrcode-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Digite o c\\xF3digo de autentica\\xE7\\xE3o de dois fatores:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"C\\xF3digo 2FA\",\n            value: twoFactorToken,\n            onChange: e => setTwoFactorToken(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/registro\",\n          children: \"Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"8khnGZ6vGbljrsXp1v/9Kvk0ylI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","senha","setSenha","twoFactorToken","setTwoFactorToken","showTwoFactor","setShowTwoFactor","errorMessage","setErrorMessage","handleLogin","e","preventDefault","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","style","color","href","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Login.css';\r\n\r\nconst Login: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [twoFactorToken, setTwoFactorToken] = useState('');\r\n    const [showTwoFactor, setShowTwoFactor] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleLogin = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (email && senha) {\r\n            // Aqui, não estamos validando nada, apenas mostrando o campo 2FA\r\n            setShowTwoFactor(true); // Torna o campo 2FA visível\r\n        } else {\r\n            setErrorMessage('Por favor, preencha todos os campos.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form-box\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>Login</h3>\r\n                    \r\n                    {/* Campos de email e senha */}\r\n                    {!showTwoFactor && (\r\n                        <>\r\n                            <input \r\n                                type=\"email\" \r\n                                placeholder=\"Email\" \r\n                                value={email} \r\n                                onChange={(e) => setEmail(e.target.value)} \r\n                            />\r\n                            <input \r\n                                type=\"password\" \r\n                                placeholder=\"Senha\" \r\n                                value={senha} \r\n                                onChange={(e) => setSenha(e.target.value)} \r\n                            />\r\n                        </>\r\n                    )}\r\n\r\n                    {/* Exibe o campo de 2FA somente quando o login básico for feito */}\r\n                    {showTwoFactor && (\r\n                        <div className=\"qrcode-container\">\r\n                            <p>Digite o código de autenticação de dois fatores:</p>\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Código 2FA\" \r\n                                value={twoFactorToken} \r\n                                onChange={(e) => setTwoFactorToken(e.target.value)} \r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <button type=\"submit\">Entrar</button>\r\n                </form>\r\n                {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n                <p>Não tem uma conta? <a href=\"/registro\">Cadastro</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
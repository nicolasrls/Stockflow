{"ast":null,"code":"import React,{useState}from'react';import'../styles/Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[senha,setSenha]=useState('');const[twoFactorToken,setTwoFactorToken]=useState('');const[errorMessage,setErrorMessage]=useState('');const handleLogin=async e=>{e.preventDefault();if(email&&senha){try{// Enviar dados de login para o back-end\nconst response=await fetch('http://localhost:5000/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password:senha,twoFactorToken// Se você estiver implementando 2FA, envie o token\n})});const data=await response.json();if(response.ok){// Sucesso - Armazenar o token JWT no localStorage ou no estado\nalert('Login bem-sucedido!');localStorage.setItem('token',data.token);// Exemplo de armazenamento de token\n}else{// Mostrar erro\nsetErrorMessage(data.message||'Erro ao fazer login');}}catch(error){setErrorMessage('Erro de conexão. Tente novamente mais tarde.');}}else{setErrorMessage('Por favor, preencha todos os campos.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Senha\",value:senha,onChange:e=>setSenha(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"C\\xF3digo 2FA\",value:twoFactorToken,onChange:e=>setTwoFactorToken(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Entrar\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:errorMessage}),/*#__PURE__*/_jsxs(\"p\",{children:[\"N\\xE3o tem uma conta? \",/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"Cadastro\"})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","senha","setSenha","twoFactorToken","setTwoFactorToken","errorMessage","setErrorMessage","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","data","json","ok","alert","localStorage","setItem","token","message","error","className","children","onSubmit","type","placeholder","value","onChange","target","style","color","href"],"sources":["D:/NRCodes/Stockflow/client/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Login.css';\n\nconst Login: React.FC = () => {\n    const [email, setEmail] = useState('');\n    const [senha, setSenha] = useState('');\n    const [twoFactorToken, setTwoFactorToken] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (email && senha) {\n            try {\n                // Enviar dados de login para o back-end\n                const response = await fetch('http://localhost:5000/login', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        email,\n                        password: senha,\n                        twoFactorToken, // Se você estiver implementando 2FA, envie o token\n                    }),\n                });\n\n                const data = await response.json();\n\n                if (response.ok) {\n                    // Sucesso - Armazenar o token JWT no localStorage ou no estado\n                    alert('Login bem-sucedido!');\n                    localStorage.setItem('token', data.token); // Exemplo de armazenamento de token\n                } else {\n                    // Mostrar erro\n                    setErrorMessage(data.message || 'Erro ao fazer login');\n                }\n            } catch (error) {\n                setErrorMessage('Erro de conexão. Tente novamente mais tarde.');\n            }\n        } else {\n            setErrorMessage('Por favor, preencha todos os campos.');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"form-box\">\n                <form onSubmit={handleLogin}>\n                    <h3>Login</h3>\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email\" \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)} \n                    />\n                    <input \n                        type=\"password\" \n                        placeholder=\"Senha\" \n                        value={senha} \n                        onChange={(e) => setSenha(e.target.value)} \n                    />\n                    <input \n                        type=\"text\" \n                        placeholder=\"Código 2FA\" \n                        value={twoFactorToken} \n                        onChange={(e) => setTwoFactorToken(e.target.value)} \n                    />\n                    <button type=\"submit\">Entrar</button>\n                </form>\n                {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n                <p>Não tem uma conta? <a href=\"/\">Cadastro</a></p>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
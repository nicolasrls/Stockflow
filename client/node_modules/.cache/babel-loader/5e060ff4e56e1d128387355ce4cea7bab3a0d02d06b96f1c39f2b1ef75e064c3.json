{"ast":null,"code":"import React,{useState}from'react';import'../styles/Registro.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Registro=()=>{const[nome,setNome]=useState('');const[email,setEmail]=useState('');const[senha,setSenha]=useState('');const[senhaConfirmada,setSenhaConfirmada]=useState('');const[qrCodeVisible,setQrCodeVisible]=useState(false);const[codigoAutenticacao,setCodigoAutenticacao]=useState('');const[errorMessage,setErrorMessage]=useState('');const handleSubmit=async e=>{e.preventDefault();// Validar os campos\nif(nome&&email&&senha&&senha===senhaConfirmada){try{const response=await fetch('http://localhost:5000/api/auth/register',{// Verifique a URL do seu back-end\nmethod:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:nome,email,password:senha})});const data=await response.json();if(response.ok){// Sucesso - Mostra o código 2FA\nsetQrCodeVisible(true);setCodigoAutenticacao(data.twoFactorSecret);}else{setErrorMessage(data.message||'Erro no cadastro');}}catch(error){setErrorMessage('Erro de comunicação com o servidor');console.error(error);}}else{alert('Por favor, preencha todos os campos corretamente.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Cadastro\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nome\",value:nome,onChange:e=>setNome(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Senha\",value:senha,onChange:e=>setSenha(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirmar Senha\",value:senhaConfirmada,onChange:e=>setSenhaConfirmada(e.target.value)}),qrCodeVisible&&/*#__PURE__*/_jsx(\"div\",{className:\"qrcode-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:codigoAutenticacao,disabled:true})}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Cadastrar\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"J\\xE1 tem uma conta? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login\"})]})]})});};export default Registro;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Registro","nome","setNome","email","setEmail","senha","setSenha","senhaConfirmada","setSenhaConfirmada","qrCodeVisible","setQrCodeVisible","codigoAutenticacao","setCodigoAutenticacao","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","password","data","json","ok","twoFactorSecret","message","error","console","alert","className","children","onSubmit","type","placeholder","value","onChange","target","disabled","href"],"sources":["D:/NRCodes/Stockflow/client/src/components/Registro.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Registro.css';\n\nconst Registro: React.FC = () => {\n    const [nome, setNome] = useState('');\n    const [email, setEmail] = useState('');\n    const [senha, setSenha] = useState('');\n    const [senhaConfirmada, setSenhaConfirmada] = useState('');\n    const [qrCodeVisible, setQrCodeVisible] = useState(false);\n    const [codigoAutenticacao, setCodigoAutenticacao] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        // Validar os campos\n        if (nome && email && senha && senha === senhaConfirmada) {\n            try {\n                const response = await fetch('http://localhost:5000/api/auth/register', {  // Verifique a URL do seu back-end\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        name: nome,\n                        email,\n                        password: senha,\n                    }),\n                });\n\n                const data = await response.json();\n                if (response.ok) {\n                    // Sucesso - Mostra o código 2FA\n                    setQrCodeVisible(true);\n                    setCodigoAutenticacao(data.twoFactorSecret);\n                } else {\n                    setErrorMessage(data.message || 'Erro no cadastro');\n                }\n            } catch (error) {\n                setErrorMessage('Erro de comunicação com o servidor');\n                console.error(error);\n            }\n        } else {\n            alert('Por favor, preencha todos os campos corretamente.');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"form-box\">\n                <form onSubmit={handleSubmit}>\n                    <h3>Cadastro</h3>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Nome\" \n                        value={nome} \n                        onChange={(e) => setNome(e.target.value)} \n                    />\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email\" \n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)} \n                    />\n                    <input \n                        type=\"password\" \n                        placeholder=\"Senha\" \n                        value={senha} \n                        onChange={(e) => setSenha(e.target.value)} \n                    />\n                    <input \n                        type=\"password\" \n                        placeholder=\"Confirmar Senha\" \n                        value={senhaConfirmada} \n                        onChange={(e) => setSenhaConfirmada(e.target.value)} \n                    />\n\n                    {qrCodeVisible && (\n                        <div className=\"qrcode-container\">\n                            {/* Aqui você pode exibir o código 2FA ou até gerar o QR code */}\n                            <input type=\"text\" value={codigoAutenticacao} disabled />\n                        </div>\n                    )}\n\n                    {errorMessage && <p className=\"error\">{errorMessage}</p>}\n\n                    <button type=\"submit\">Cadastrar</button>\n                </form>\n                <p>Já tem uma conta? <a href=\"/login\">Login</a></p>\n            </div>\n        </div>\n    );\n};\n\nexport default Registro;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\sotckflow 2\\\\Stockflow\\\\client\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [twoFactorToken, setTwoFactorToken] = useState('');\n  const [showTwoFactor, setShowTwoFactor] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (email && senha) {\n      // Os campos de email e senha são preenchidos corretamente\n      setShowTwoFactor(true); // Torna o campo 2FA visível\n    } else {\n      setErrorMessage('Por favor, preencha todos os campos.');\n    }\n  };\n  const handleTwoFactorSubmit = e => {\n    e.preventDefault();\n\n    // Simulando uma verificação do token 2FA\n    if (twoFactorToken === '123456') {\n      // Simule a verificação com um token fictício\n      // Redireciona para a página /home\n      window.location.href = '/home';\n    } else {\n      alert('Token 2FA inválido. Tente novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          style: {\n            display: showTwoFactor ? 'none' : 'block'\n          } // Esconde o campo de email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Senha\",\n          value: senha,\n          onChange: e => setSenha(e.target.value),\n          style: {\n            display: showTwoFactor ? 'none' : 'block'\n          } // Esconde o campo de senha\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), showTwoFactor && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"two-factor-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Digite o c\\xF3digo 2FA abaixo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"C\\xF3digo 2FA\",\n            value: twoFactorToken,\n            onChange: e => setTwoFactorToken(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleTwoFactorSubmit,\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), !showTwoFactor && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/registro\",\n          children: \"Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"8khnGZ6vGbljrsXp1v/9Kvk0ylI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","twoFactorToken","setTwoFactorToken","showTwoFactor","setShowTwoFactor","errorMessage","setErrorMessage","handleLogin","e","preventDefault","handleTwoFactorSubmit","window","location","href","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","style","display","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Login.css';\r\n\r\nconst Login: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [twoFactorToken, setTwoFactorToken] = useState('');\r\n    const [showTwoFactor, setShowTwoFactor] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleLogin = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (email && senha) {\r\n            // Os campos de email e senha são preenchidos corretamente\r\n            setShowTwoFactor(true); // Torna o campo 2FA visível\r\n        } else {\r\n            setErrorMessage('Por favor, preencha todos os campos.');\r\n        }\r\n    };\r\n\r\n    const handleTwoFactorSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        // Simulando uma verificação do token 2FA\r\n        if (twoFactorToken === '123456') { // Simule a verificação com um token fictício\r\n            // Redireciona para a página /home\r\n            window.location.href = '/home';\r\n        } else {\r\n            alert('Token 2FA inválido. Tente novamente.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form-box\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>Login</h3>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        style={{ display: showTwoFactor ? 'none' : 'block' }} // Esconde o campo de email\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        value={senha}\r\n                        onChange={(e) => setSenha(e.target.value)}\r\n                        style={{ display: showTwoFactor ? 'none' : 'block' }} // Esconde o campo de senha\r\n                    />\r\n\r\n                    {showTwoFactor && (\r\n                        <div className=\"two-factor-container\">\r\n                            <p>Digite o código 2FA abaixo:</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Código 2FA\"\r\n                                value={twoFactorToken}\r\n                                onChange={(e) => setTwoFactorToken(e.target.value)}\r\n                            />\r\n                            <button type=\"submit\" onClick={handleTwoFactorSubmit}>Entrar</button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {!showTwoFactor && <button type=\"submit\">Entrar</button>}\r\n                </form>\r\n                {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n                <p>Não tem uma conta? <a href=\"/registro\">Cadastro</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\sotckflow 2\\\\Stockflow\\\\client\\\\src\\\\components\\\\Registro.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Registro.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registro = () => {\n  _s();\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [senhaConfirmada, setSenhaConfirmada] = useState('');\n  const [qrCodeVisible, setQrCodeVisible] = useState(false);\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n  const [twoFactorSecret, setTwoFactorSecret] = useState('');\n  const [codigoAutenticacao, setCodigoAutenticacao] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validar os campos\n    if (nome && email && senha && senha === senhaConfirmada) {\n      try {\n        const response = await fetch('http://localhost:5000/api/auth/register', {\n          // Verifique a URL do seu back-end\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: nome,\n            email,\n            password: senha\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Mostrar QR Code\n          setQrCodeUrl(data.qrCodeDataUrl);\n          setQrCodeVisible(true);\n        } else {\n          setErrorMessage(data.message || 'Erro no cadastro');\n        }\n      } catch (error) {\n        setErrorMessage('Erro de comunicação com o servidor');\n        console.error(error);\n      }\n    } else {\n      alert('Por favor, preencha todos os campos corretamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nome\",\n          value: nome,\n          onChange: e => setNome(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Senha\",\n          value: senha,\n          onChange: e => setSenha(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirmar Senha\",\n          value: senhaConfirmada,\n          onChange: e => setSenhaConfirmada(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), qrCodeVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qrcode-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: qrCodeUrl,\n            alt: \"QR Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"J\\xE1 tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Registro, \"d1VWsRsLRw7nuapfYLwqXBJQwJg=\");\n_c = Registro;\nexport default Registro;\nvar _c;\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Registro","_s","nome","setNome","email","setEmail","senha","setSenha","senhaConfirmada","setSenhaConfirmada","qrCodeVisible","setQrCodeVisible","qrCodeUrl","setQrCodeUrl","twoFactorSecret","setTwoFactorSecret","codigoAutenticacao","setCodigoAutenticacao","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","password","data","json","ok","qrCodeDataUrl","message","error","console","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","src","alt","href","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/src/components/Registro.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Registro.css';\r\n\r\nconst Registro: React.FC = () => {\r\n    const [nome, setNome] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [senhaConfirmada, setSenhaConfirmada] = useState('');\r\n    const [qrCodeVisible, setQrCodeVisible] = useState(false);\r\n    const [qrCodeUrl, setQrCodeUrl] = useState('');\r\n    const [twoFactorSecret, setTwoFactorSecret] = useState('');\r\n    const [codigoAutenticacao, setCodigoAutenticacao] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        // Validar os campos\r\n        if (nome && email && senha && senha === senhaConfirmada) {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/auth/register', {  // Verifique a URL do seu back-end\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: nome,\r\n                        email,\r\n                        password: senha,\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    // Mostrar QR Code\r\n                    setQrCodeUrl(data.qrCodeDataUrl);\r\n                    setQrCodeVisible(true);\r\n                } else {\r\n                    setErrorMessage(data.message || 'Erro no cadastro');\r\n                }\r\n            } catch (error) {\r\n                setErrorMessage('Erro de comunicação com o servidor');\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            alert('Por favor, preencha todos os campos corretamente.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form-box\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <h3>Cadastro</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nome\"\r\n                        value={nome}\r\n                        onChange={(e) => setNome(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        value={senha}\r\n                        onChange={(e) => setSenha(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirmar Senha\"\r\n                        value={senhaConfirmada}\r\n                        onChange={(e) => setSenhaConfirmada(e.target.value)}\r\n                    />\r\n\r\n                    {qrCodeVisible && (\r\n                        <div className=\"qrcode-container\">\r\n                            <img src={qrCodeUrl} alt=\"QR Code\" />\r\n                        </div>\r\n                    )}\r\n\r\n                    {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n\r\n                    <button type=\"submit\">Cadastrar</button>\r\n                </form>\r\n                <p>Já tem uma conta? <a href=\"/login\">Login</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registro;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMuB,YAAY,GAAG,MAAOC,CAAkB,IAAK;IAC/CA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIpB,IAAI,IAAIE,KAAK,IAAIE,KAAK,IAAIA,KAAK,KAAKE,eAAe,EAAE;MACrD,IAAI;QACA,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UAAG;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBC,IAAI,EAAE5B,IAAI;YACVE,KAAK;YACL2B,QAAQ,EAAEzB;UACd,CAAC;QACL,CAAC,CAAC;QAEF,MAAM0B,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,IAAIV,QAAQ,CAACW,EAAE,EAAE;UACb;UACArB,YAAY,CAACmB,IAAI,CAACG,aAAa,CAAC;UAChCxB,gBAAgB,CAAC,IAAI,CAAC;QAC1B,CAAC,MAAM;UACHQ,eAAe,CAACa,IAAI,CAACI,OAAO,IAAI,kBAAkB,CAAC;QACvD;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZlB,eAAe,CAAC,oCAAoC,CAAC;QACrDmB,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC,MAAM;MACHE,KAAK,CAAC,mDAAmD,CAAC;IAC9D;EACJ,CAAC;EAED,oBACIxC,OAAA;IAAKyC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtB1C,OAAA;MAAKyC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrB1C,OAAA;QAAM2C,QAAQ,EAAEtB,YAAa;QAAAqB,QAAA,gBACzB1C,OAAA;UAAA0C,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB/C,OAAA;UACIgD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAE/C,IAAK;UACZgD,QAAQ,EAAG7B,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAAC8B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACF/C,OAAA;UACIgD,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAE7C,KAAM;UACb8C,QAAQ,EAAG7B,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAAC8B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACF/C,OAAA;UACIgD,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAE3C,KAAM;UACb4C,QAAQ,EAAG7B,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAAC8B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACF/C,OAAA;UACIgD,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,iBAAiB;UAC7BC,KAAK,EAAEzC,eAAgB;UACvB0C,QAAQ,EAAG7B,CAAC,IAAKZ,kBAAkB,CAACY,CAAC,CAAC8B,MAAM,CAACF,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,EAEDpC,aAAa,iBACVX,OAAA;UAAKyC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC7B1C,OAAA;YAAKqD,GAAG,EAAExC,SAAU;YAACyC,GAAG,EAAC;UAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CACR,EAEA5B,YAAY,iBAAInB,OAAA;UAAGyC,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEvB;QAAY;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAExD/C,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACP/C,OAAA;QAAA0C,QAAA,GAAG,uBAAkB,eAAA1C,OAAA;UAAGuD,IAAI,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC7C,EAAA,CA1FID,QAAkB;AAAAuD,EAAA,GAAlBvD,QAAkB;AA4FxB,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
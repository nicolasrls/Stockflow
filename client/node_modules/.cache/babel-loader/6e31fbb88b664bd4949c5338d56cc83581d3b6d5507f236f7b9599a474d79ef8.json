{"ast":null,"code":"\"use strict\";\n\nexports.transpose = transpose;\nvar _index = require(\"./constructFrom.js\");\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nfunction transpose(fromDate, constructor) {\n  const date = constructor instanceof Date ? (0, _index.constructFrom)(constructor, 0) : new constructor(0);\n  date.setFullYear(fromDate.getFullYear(), fromDate.getMonth(), fromDate.getDate());\n  date.setHours(fromDate.getHours(), fromDate.getMinutes(), fromDate.getSeconds(), fromDate.getMilliseconds());\n  return date;\n}","map":{"version":3,"names":["exports","transpose","_index","require","fromDate","constructor","date","Date","constructFrom","setFullYear","getFullYear","getMonth","getDate","setHours","getHours","getMinutes","getSeconds","getMilliseconds"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/transpose.js"],"sourcesContent":["\"use strict\";\nexports.transpose = transpose;\nvar _index = require(\"./constructFrom.js\");\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nfunction transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? (0, _index.constructFrom)(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,SAAS,GAAGA,SAAS;AAC7B,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,SAASA,CAACG,QAAQ,EAAEC,WAAW,EAAE;EACxC,MAAMC,IAAI,GACRD,WAAW,YAAYE,IAAI,GACvB,CAAC,CAAC,EAAEL,MAAM,CAACM,aAAa,EAAEH,WAAW,EAAE,CAAC,CAAC,GACzC,IAAIA,WAAW,CAAC,CAAC,CAAC;EACxBC,IAAI,CAACG,WAAW,CACdL,QAAQ,CAACM,WAAW,CAAC,CAAC,EACtBN,QAAQ,CAACO,QAAQ,CAAC,CAAC,EACnBP,QAAQ,CAACQ,OAAO,CAAC,CACnB,CAAC;EACDN,IAAI,CAACO,QAAQ,CACXT,QAAQ,CAACU,QAAQ,CAAC,CAAC,EACnBV,QAAQ,CAACW,UAAU,CAAC,CAAC,EACrBX,QAAQ,CAACY,UAAU,CAAC,CAAC,EACrBZ,QAAQ,CAACa,eAAe,CAAC,CAC3B,CAAC;EACD,OAAOX,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
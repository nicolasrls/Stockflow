{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\sotckflow 2\\\\Stockflow\\\\client\\\\src\\\\components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; // Importando o useHistory para navegação\nimport '../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [twoFactorToken, setTwoFactorToken] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory(); // Hook para navegação\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (email && senha) {\n      try {\n        // Enviar dados de login para o back-end\n        const response = await fetch('http://localhost:5000/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password: senha,\n            twoFactorToken // Se você estiver implementando 2FA, envie o token\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Sucesso - Armazenar o token JWT no localStorage ou no estado\n          alert('Login bem-sucedido!');\n          localStorage.setItem('token', data.token); // Exemplo de armazenamento de token\n\n          // Redireciona para a página /home\n          history.push('/home');\n        } else {\n          // Mostrar erro\n          setErrorMessage(data.message || 'Erro ao fazer login');\n        }\n      } catch (error) {\n        setErrorMessage('Erro de conexão. Tente novamente mais tarde.');\n      }\n    } else {\n      setErrorMessage('Por favor, preencha todos os campos.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Senha\",\n          value: senha,\n          onChange: e => setSenha(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"C\\xF3digo 2FA\",\n          value: twoFactorToken,\n          onChange: e => setTwoFactorToken(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/registro\",\n          children: \"Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"w+DvxeOiqXYVeND3MAtUnZk17PY=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","twoFactorToken","setTwoFactorToken","errorMessage","setErrorMessage","history","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","password","data","json","ok","alert","localStorage","setItem","token","push","message","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","style","color","href","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'; // Importando o useHistory para navegação\r\nimport '../styles/Login.css';\r\n\r\nconst Login: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [twoFactorToken, setTwoFactorToken] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const history = useHistory(); // Hook para navegação\r\n\r\n    const handleLogin = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (email && senha) {\r\n            try {\r\n                // Enviar dados de login para o back-end\r\n                const response = await fetch('http://localhost:5000/api/auth/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email,\r\n                        password: senha,\r\n                        twoFactorToken, // Se você estiver implementando 2FA, envie o token\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) {\r\n                    // Sucesso - Armazenar o token JWT no localStorage ou no estado\r\n                    alert('Login bem-sucedido!');\r\n                    localStorage.setItem('token', data.token); // Exemplo de armazenamento de token\r\n                    \r\n                    // Redireciona para a página /home\r\n                    history.push('/home');\r\n                } else {\r\n                    // Mostrar erro\r\n                    setErrorMessage(data.message || 'Erro ao fazer login');\r\n                }\r\n            } catch (error) {\r\n                setErrorMessage('Erro de conexão. Tente novamente mais tarde.');\r\n            }\r\n        } else {\r\n            setErrorMessage('Por favor, preencha todos os campos.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"form-box\">\r\n                <form onSubmit={handleLogin}>\r\n                    <h3>Login</h3>\r\n                    <input \r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                    />\r\n                    <input \r\n                        type=\"password\" \r\n                        placeholder=\"Senha\" \r\n                        value={senha} \r\n                        onChange={(e) => setSenha(e.target.value)} \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Código 2FA\" \r\n                        value={twoFactorToken} \r\n                        onChange={(e) => setTwoFactorToken(e.target.value)} \r\n                    />\r\n                    <button type=\"submit\">Entrar</button>\r\n                </form>\r\n                {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n                <p>Não tem uma conta? <a href=\"/registro\">Cadastro</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
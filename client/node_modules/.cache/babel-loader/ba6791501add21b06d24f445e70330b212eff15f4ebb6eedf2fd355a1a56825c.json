{"ast":null,"code":"\"use strict\";\n\nexports.ISOWeekYearParser = void 0;\nvar _index = require(\"../../../startOfISOWeek.js\");\nvar _index2 = require(\"../../../constructFrom.js\");\nvar _Parser = require(\"../Parser.js\");\nvar _utils = require(\"../utils.js\");\n\n// ISO week-numbering year\nclass ISOWeekYearParser extends _Parser.Parser {\n  priority = 130;\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n  set(date, _flags, value) {\n    const firstWeekOfYear = (0, _index2.constructFrom)(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return (0, _index.startOfISOWeek)(firstWeekOfYear);\n  }\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"u\", \"Q\", \"q\", \"M\", \"L\", \"w\", \"d\", \"D\", \"e\", \"c\", \"t\", \"T\"];\n}\nexports.ISOWeekYearParser = ISOWeekYearParser;","map":{"version":3,"names":["exports","ISOWeekYearParser","_index","require","_index2","_Parser","_utils","Parser","priority","parse","dateString","token","parseNDigitsSigned","length","set","date","_flags","value","firstWeekOfYear","constructFrom","setFullYear","setHours","startOfISOWeek","incompatibleTokens"],"sources":["C:/Users/gabri/OneDrive/√Årea de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js"],"sourcesContent":["\"use strict\";\nexports.ISOWeekYearParser = void 0;\nvar _index = require(\"../../../startOfISOWeek.js\");\nvar _index2 = require(\"../../../constructFrom.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// ISO week-numbering year\nclass ISOWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return (0, _utils.parseNDigitsSigned)(4, dateString);\n    }\n\n    return (0, _utils.parseNDigitsSigned)(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = (0, _index2.constructFrom)(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return (0, _index.startOfISOWeek)(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.ISOWeekYearParser = ISOWeekYearParser;\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,iBAAiB,GAAG,KAAK,CAAC;AAClC,IAAIC,MAAM,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAClD,IAAIC,OAAO,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAClD,IAAIE,OAAO,GAAGF,OAAO,CAAC,cAAc,CAAC;AAErC,IAAIG,MAAM,GAAGH,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACA,MAAMF,iBAAiB,SAASI,OAAO,CAACE,MAAM,CAAC;EAC7CC,QAAQ,GAAG,GAAG;EAEdC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAE;IACvB,IAAIA,KAAK,KAAK,GAAG,EAAE;MACjB,OAAO,CAAC,CAAC,EAAEL,MAAM,CAACM,kBAAkB,EAAE,CAAC,EAAEF,UAAU,CAAC;IACtD;IAEA,OAAO,CAAC,CAAC,EAAEJ,MAAM,CAACM,kBAAkB,EAAED,KAAK,CAACE,MAAM,EAAEH,UAAU,CAAC;EACjE;EAEAI,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAE;IACvB,MAAMC,eAAe,GAAG,CAAC,CAAC,EAAEd,OAAO,CAACe,aAAa,EAAEJ,IAAI,EAAE,CAAC,CAAC;IAC3DG,eAAe,CAACE,WAAW,CAACH,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxCC,eAAe,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,OAAO,CAAC,CAAC,EAAEnB,MAAM,CAACoB,cAAc,EAAEJ,eAAe,CAAC;EACpD;EAEAK,kBAAkB,GAAG,CACnB,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;AACH;AACAvB,OAAO,CAACC,iBAAiB,GAAGA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nexports.startOfISOWeekYear = startOfISOWeekYear;\nvar _index = require(\"./getISOWeekYear.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./constructFrom.js\");\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOWeekYear(date) {\n  const year = (0, _index.getISOWeekYear)(date);\n  const fourthOfJanuary = (0, _index3.constructFrom)(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return (0, _index2.startOfISOWeek)(fourthOfJanuary);\n}","map":{"version":3,"names":["exports","startOfISOWeekYear","_index","require","_index2","_index3","date","year","getISOWeekYear","fourthOfJanuary","constructFrom","setFullYear","setHours","startOfISOWeek"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/startOfISOWeekYear.js"],"sourcesContent":["\"use strict\";\nexports.startOfISOWeekYear = startOfISOWeekYear;\nvar _index = require(\"./getISOWeekYear.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./constructFrom.js\");\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOWeekYear(date) {\n  const year = (0, _index.getISOWeekYear)(date);\n  const fourthOfJanuary = (0, _index3.constructFrom)(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return (0, _index2.startOfISOWeek)(fourthOfJanuary);\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,kBAAkB,GAAGA,kBAAkB;AAC/C,IAAIC,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC3C,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC5C,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAoB,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,kBAAkBA,CAACK,IAAI,EAAE;EAChC,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAEL,MAAM,CAACM,cAAc,EAAEF,IAAI,CAAC;EAC7C,MAAMG,eAAe,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAACK,aAAa,EAAEJ,IAAI,EAAE,CAAC,CAAC;EAC3DG,eAAe,CAACE,WAAW,CAACJ,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACvCE,eAAe,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,OAAO,CAAC,CAAC,EAAER,OAAO,CAACS,cAAc,EAAEJ,eAAe,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
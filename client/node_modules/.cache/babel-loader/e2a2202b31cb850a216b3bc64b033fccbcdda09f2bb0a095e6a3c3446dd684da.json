{"ast":null,"code":"\"use strict\";\n\nexports.min = min;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min(dates) {\n  let result;\n  dates.forEach(dirtyDate => {\n    const date = (0, _index.toDate)(dirtyDate);\n    if (!result || result > date || isNaN(+date)) {\n      result = date;\n    }\n  });\n  return result || new Date(NaN);\n}","map":{"version":3,"names":["exports","min","_index","require","dates","result","forEach","dirtyDate","date","toDate","isNaN","Date","NaN"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/min.js"],"sourcesContent":["\"use strict\";\nexports.min = min;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min(dates) {\n  let result;\n\n  dates.forEach((dirtyDate) => {\n    const date = (0, _index.toDate)(dirtyDate);\n    if (!result || result > date || isNaN(+date)) {\n      result = date;\n    }\n  });\n\n  return result || new Date(NaN);\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,GAAG,GAAGA,GAAG;AACjB,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,GAAGA,CAACG,KAAK,EAAE;EAClB,IAAIC,MAAM;EAEVD,KAAK,CAACE,OAAO,CAAEC,SAAS,IAAK;IAC3B,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACO,MAAM,EAAEF,SAAS,CAAC;IAC1C,IAAI,CAACF,MAAM,IAAIA,MAAM,GAAGG,IAAI,IAAIE,KAAK,CAAC,CAACF,IAAI,CAAC,EAAE;MAC5CH,MAAM,GAAGG,IAAI;IACf;EACF,CAAC,CAAC;EAEF,OAAOH,MAAM,IAAI,IAAIM,IAAI,CAACC,GAAG,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
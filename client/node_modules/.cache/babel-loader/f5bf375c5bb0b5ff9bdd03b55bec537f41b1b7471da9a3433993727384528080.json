{"ast":null,"code":"\"use strict\";\n\nexports.getDaysInYear = getDaysInYear;\nvar _index = require(\"./isLeapYear.js\");\nvar _index2 = require(\"./toDate.js\");\n\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear(date) {\n  const _date = (0, _index2.toDate)(date);\n  if (String(new Date(_date)) === \"Invalid Date\") {\n    return NaN;\n  }\n  return (0, _index.isLeapYear)(_date) ? 366 : 365;\n}","map":{"version":3,"names":["exports","getDaysInYear","_index","require","_index2","date","_date","toDate","String","Date","NaN","isLeapYear"],"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/sotckflow 2/Stockflow/client/node_modules/date-fns/getDaysInYear.js"],"sourcesContent":["\"use strict\";\nexports.getDaysInYear = getDaysInYear;\nvar _index = require(\"./isLeapYear.js\");\nvar _index2 = require(\"./toDate.js\");\n\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * const result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear(date) {\n  const _date = (0, _index2.toDate)(date);\n\n  if (String(new Date(_date)) === \"Invalid Date\") {\n    return NaN;\n  }\n\n  return (0, _index.isLeapYear)(_date) ? 366 : 365;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,aAAa,GAAGA,aAAa;AACrC,IAAIC,MAAM,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,aAAaA,CAACI,IAAI,EAAE;EAC3B,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAEF,OAAO,CAACG,MAAM,EAAEF,IAAI,CAAC;EAEvC,IAAIG,MAAM,CAAC,IAAIC,IAAI,CAACH,KAAK,CAAC,CAAC,KAAK,cAAc,EAAE;IAC9C,OAAOI,GAAG;EACZ;EAEA,OAAO,CAAC,CAAC,EAAER,MAAM,CAACS,UAAU,EAAEL,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG;AAClD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}